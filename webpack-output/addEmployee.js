/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./JS/script1.js":
/*!***********************!*\
  !*** ./JS/script1.js ***!
  \***********************/
/***/ (() => {

eval("let emptyfield = false;\nlet isExisiting = false;\nlet updateData = localStorage.getItem(\"updateEmp\");\nfunction uploadProfilePic() {\n  let inpFile = document.getElementById(\"upload-img\");\n  let profilePic = document.getElementById(\"user-img\");\n  let uploadbtn = document.getElementById(\"btn-upload\");\n  inpFile.onchange = () => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => {\n      profilePic.src = reader.result;\n    });\n    reader.readAsDataURL(inpFile.files[0]);\n  };\n  uploadbtn.onclick = () => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => {\n      profilePic.src = reader.result;\n    });\n    reader.readAsDataURL(inpFile.files[0]);\n  };\n}\nfunction isIdUnique(empID) {\n  let lsData = JSON.parse(localStorage.getItem(\"addData\"));\n  for (obj in lsData) {\n    if (lsData[obj].empId === empID) {\n      isExisiting = true;\n      document.getElementById(\"validate-msg-emp-no\").innerHTML = `<span><i class=\"ph-fill ph-warning-diamond\"></i></span>Already Used Check Your Employee ID`;\n      document.getElementById(\"validate-msg-emp-no\").classList.remove(\"d-none\");\n      return false;\n    }\n  }\n  return true;\n}\nfunction checkAllFields() {\n  let fields = [\"emp-no\", \"fname\", \"lname\", \"email\", \"jdate\"];\n  for (let i = 0; i < fields.length; i++) {\n    if (document.forms[\"form-data\"][fields[i]].value === \"\") {\n      console.log(document.forms[\"form-data\"][fields[i]].value);\n      document.getElementById(`validate-msg-${fields[i]}`).classList.remove(\"d-none\");\n      emptyfield = true;\n    } else {\n      if (!document.getElementById(`validate-msg-${fields[i]}`).classList.contains(\"d-none\")) {\n        document.getElementById(`validate-msg-${fields[i]}`).classList.add(\"d-none\");\n      }\n    }\n  }\n  if (emptyfield) {\n    return false;\n  } else {\n    return true;\n  }\n}\nfunction resetForm() {\n  let fields = [\"emp-no\", \"fname\", \"lname\", \"email\", \"jdate\"];\n  for (let i = 0; i < fields.length; i++) {\n    document.forms[\"form-data\"][fields[i]].value = \"\";\n  }\n}\nfunction addEmployeeData(obj) {\n  let strObj = JSON.stringify(obj);\n  let prevData = localStorage.getItem(\"addData\");\n  if (prevData) {\n    prevData = JSON.parse(prevData);\n    obj = obj.concat(prevData);\n    obj = JSON.stringify(obj);\n    localStorage.setItem(\"addData\", obj);\n  } else {\n    localStorage.setItem(\"addData\", strObj);\n  }\n}\nfunction updateEmployeeData(obj) {\n  let oldData = JSON.parse(localStorage.getItem(\"addData\"));\n  for (k in oldData) {\n    if (obj[0].empId == oldData[k].empId) {\n      oldData[k].user = obj[0].user;\n      oldData[k].dob = obj[0].dob;\n      oldData[k].location = obj[0].location;\n      oldData[k].joinDate = obj[0].joinDate;\n      oldData[k].department = obj[0].department;\n      oldData[k].role = obj[0].role;\n      oldData[k].imgSrc = obj[0].imgSrc;\n    }\n  }\n  oldData = JSON.stringify(oldData);\n  localStorage.setItem(\"addData\", oldData);\n}\nfunction handleAddEmp() {\n  //retreiving all the form information and storing the variables\n  let e = document.getElementById(\"dept-inp-form\");\n  let department = e.options[e.selectedIndex].text;\n  let l = document.getElementById(\"location\");\n  let location = l.options[l.selectedIndex].text;\n  let j = document.getElementById(\"job-title\");\n  let role = j.options[j.selectedIndex].text;\n  let a = document.getElementById(\"assign-job\");\n  let assignJob = a.options[a.selectedIndex].text;\n  let i = document.getElementById(\"assign-inp-proj\");\n  let assignProject = i.options[i.selectedIndex].text;\n  let fname = document.getElementById(\"fname\").value;\n  let lname = document.getElementById(\"lname\").value;\n  let user = document.getElementById(\"fname\").value + \" \" + document.getElementById(\"lname\").value;\n  let empId = document.getElementById(\"emp-no\").value;\n  let dob = document.getElementById(\"dob\").value;\n  let email = document.getElementById(\"email\").value;\n  let mobile = document.getElementById(\"mobile\").value;\n  let joinDate = document.getElementById(\"jdate\").value;\n  let imgSrc = document.getElementById(\"user-img\").src;\n  let obj = [{\n    user,\n    empId,\n    dob,\n    mobile,\n    department,\n    location,\n    joinDate,\n    role,\n    assignJob,\n    assignProject,\n    imgSrc,\n    email,\n    fname,\n    lname\n  }];\n  if (updateData == null) {\n    if (checkAllFields() & isIdUnique(empId)) {\n      addEmployeeData(obj);\n      resetForm(); //reseting the form before adding or updating\n      window.scrollTo(top);\n      document.getElementById(\"show-toast\").classList.toggle(\"d-none\");\n      setTimeout(() => {\n        window.location.href = \"./index.html\";\n      }, 1000);\n    }\n  } else if (updateData != null) {\n    updateEmployeeData(obj);\n    resetForm(); //reseting the form before adding or updating\n    window.scrollTo(top);\n    document.getElementById(\"show-toast\").classList.toggle(\"d-none\");\n    setTimeout(() => {\n      window.location.href = \"./index.html\";\n    }, 1000);\n  }\n}\nfunction updateEmployeeAndFillForm() {\n  if (updateData != undefined) {\n    document.getElementById(\"add-employee\").innerText = \"Update Employee\";\n    document.getElementById(\"btn-employee\").innerText = \"Update Employee\";\n    document.getElementById(\"show-toast\").innerText = \"Record Updated Successfully\";\n    updateData = JSON.parse(updateData);\n    document.forms[\"form-data\"][\"emp-no\"].value = updateData.empId.slice(0, 8);\n    document.forms[\"form-data\"][\"fname\"].value = updateData.user.split(\" \")[0];\n    document.forms[\"form-data\"][\"lname\"].value = updateData.user.split(\" \")[1];\n    document.forms[\"form-data\"][\"email\"].value = updateData.user.split(\" \")[0] + \"@tezo.com\";\n    document.forms[\"form-data\"][\"jdate\"].value = updateData.joinDate;\n    document.forms[\"form-data\"][\"mobile\"].value = updateData.mobile;\n    document.forms[\"form-data\"][\"dob\"].value = updateData.dob;\n    let l = document.getElementById(\"location\");\n    l.options[l.selectedIndex].text = updateData.location;\n    document.getElementById(\"user-img\").src = updateData.imgSrc;\n    let e = document.getElementById(\"dept-inp-form\");\n    e.options[e.selectedIndex].text = updateData.department;\n    let j = document.getElementById(\"job-title\");\n    j.options[j.selectedIndex].text = updateData.role;\n  }\n}\nfunction changeFormTemplate() {\n  document.getElementById(\"edit\").className -= \"d-flex\";\n  document.getElementById(\"edit\").className += \" show\";\n  document.getElementById(\"btn-upload\").className -= \" btn-emp\";\n  document.getElementById(\"btn-upload\").className += \" btn-accept  h-3\";\n  document.getElementById(\"inp-form\").className -= \"d-flex\";\n  let y = document.getElementsByClassName(\"inp-form-profile\");\n  y[0].className += \" d-flex  g-05 align-items-center \";\n  let x = document.getElementsByClassName(\"inp-form-row-1\");\n  for (let i = 0; i < x.length; i++) {\n    x[i].className += \" inp-validation\";\n  }\n}\nlet isNavHidden = true;\nfunction hideNavBar() {\n  document.querySelector(\".vertical-page\").classList.toggle(\"w-100\");\n  document.getElementById(\"side-nav-bar\").classList.toggle(\"hide-navbar\");\n  document.getElementById(\"hide-install-box\").classList.toggle(\"hide-install\");\n  document.getElementById(\"nav-hide-logo\").classList.toggle(\"trim-logo\");\n  let x = document.getElementsByClassName(\"nav-text\");\n  let y = document.getElementsByClassName(\"nav-text-vh\");\n  y[0].classList.add(\"hide-vh\");\n  y[1].classList.add(\"hide-vh\");\n  let i;\n  if (isNavHidden) {\n    isNavHidden = false;\n    for (i = 0; i < x.length; i++) {\n      x[i].classList.add(\"hide-text\");\n      console.log(x[i].classList);\n    }\n  } else {\n    y[0].classList.remove(\"hide-vh\");\n    y[1].classList.remove(\"hide-vh\");\n    isNavHidden = true;\n    for (i = 0; i < x.length; i++) {\n      x[i].classList.remove(\"hide-text\");\n    }\n  }\n  document.getElementById(\"close-btn\").classList.toggle(\"rotate-arrow\");\n}\ndocument.getElementById(\"close-btn\").addEventListener(\"click\", () => {\n  hideNavBar();\n});\ndocument.getElementById(\"btn-employee\").addEventListener(\"click\", () => {\n  handleAddEmp();\n});\nuploadProfilePic();\nupdateEmployeeAndFillForm();\n\n//# sourceURL=webpack:///./JS/script1.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./JS/script1.js"]();
/******/ 	
/******/ })()
;